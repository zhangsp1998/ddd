<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 把目标对象交给springIoc容器创建 -->
	<bean id="userService" class="com.hz.service.UserServiceImpl"/>
	
	<!--将切面类交给spring的容器进行管理  -->
	<bean id="myAspectXml" class="com.hz.aspectj.MyAspectXml"/>
	
	<!-- aop的配置 -->
	<aop:config>
		
		<aop:aspect ref="myAspectXml">
		
		
		
			<!--
			前置通知  在目标方法执行之前的方法 -->
			<aop:before method="log()" pointcut="execution(* com.hz.service.*.save*(..))"/> 
		
			<!-- 
			最终通知  在目标方法执行之后执行的方法  -->
			<aop:after method="after()" pointcut="execution(* com.hz.service.*.save*(..))"/>
		
			<!-- 
			
			后置通知    在目标方法执行之后执行的方法，但是如果出现异常，它就不会执行了-->
			<aop:after-returning method="after_returing" pointcut="execution(* com.hz.service.*.save*(..))"/> 
		
			<!-- 
			异常处理通知，在目标方法发生异常，他才会得到执行-->
			<aop:after-throwing method="after_throwing" pointcut="execution(* com.hz.service.*.save*(..))"/> 
		
			<aop:around method="around_method" pointcut="execution(* com.hz.service.*.save*(..))"/>
		
		</aop:aspect>
	
	</aop:config>
	
	
</beans>
